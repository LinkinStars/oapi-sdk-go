// Package acs code generated by lark suite oapi sdk gen
package acs

import (
	"io"

	"github.com/larksuite/oapi-sdk-go/v2"
)

type UserId struct {
	UserId  *string `json:"user_id,omitempty"`
	OpenId  *string `json:"open_id,omitempty"`
	UnionId *string `json:"union_id,omitempty"`
}

type AccessRecord struct {
	AccessRecordId *int64  `json:"access_record_id,omitempty,string"`
	UserId         *string `json:"user_id,omitempty"`
	DeviceId       *int64  `json:"device_id,omitempty,string"`
	IsClockIn      *bool   `json:"is_clock_in,omitempty"`
	AccessTime     *int64  `json:"access_time,omitempty,string"`
	AccessType     *string `json:"access_type,omitempty"`
	AccessData     *string `json:"access_data,omitempty"`
	IsDoorOpen     *bool   `json:"is_door_open,omitempty"`
}

type Device struct {
	DeviceId   *int64  `json:"device_id,omitempty,string"`
	DeviceName *string `json:"device_name,omitempty"`
	DeviceSn   *string `json:"device_sn,omitempty"`
}

type Feature struct {
	Card         *int  `json:"card,omitempty"`
	FaceUploaded *bool `json:"face_uploaded,omitempty"`
}

type File struct {
	Files    io.Reader `json:"files,omitempty"`
	FileType *string   `json:"file_type,omitempty"`
	FileName *string   `json:"file_name,omitempty"`
}

type User struct {
	Feature *Feature `json:"feature,omitempty"`
	UserId  *string  `json:"user_id,omitempty"`
}

type AccessRecordListReq struct {
	PageSize   *int    `query:"page_size"`
	PageToken  *string `query:"page_token"`
	From       *int    `query:"from"`
	To         *int    `query:"to"`
	DeviceId   *int64  `query:"device_id"`
	UserIdType *string `query:"user_id_type"`
}

type AccessRecordListRespData struct {
	Items     []*AccessRecord `json:"items,omitempty"`
	PageToken *string         `json:"page_token,omitempty"`
	HasMore   *bool           `json:"has_more,omitempty"`
}

type AccessRecordListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *AccessRecordListRespData `json:"data"`
}

type AccessRecordAccessPhotoGetReq struct {
	AccessRecordId string `path:"access_record_id"`
}

type AccessRecordAccessPhotoGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}

type DeviceListRespData struct {
	Items []*Device `json:"items,omitempty"`
}

type DeviceListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DeviceListRespData `json:"data"`
}

type UserPatchReq struct {
	UserId     string  `path:"user_id"`
	UserIdType *string `query:"user_id_type"`
	User       *User   `body:""`
}

type UserPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type UserGetReq struct {
	UserId     string  `path:"user_id"`
	UserIdType *string `query:"user_id_type"`
}

type UserGetRespData struct {
	User *User `json:"user,omitempty"`
}

type UserGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserGetRespData `json:"data"`
}

type UserListReq struct {
	PageSize   *int    `query:"page_size"`
	PageToken  *string `query:"page_token"`
	UserIdType *string `query:"user_id_type"`
}

type UserListRespData struct {
	Items     []*User `json:"items,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
	HasMore   *bool   `json:"has_more,omitempty"`
}

type UserListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserListRespData `json:"data"`
}

type UserFaceGetReq struct {
	UserId     string  `path:"user_id"`
	IsCropped  *bool   `query:"is_cropped"`
	UserIdType *string `query:"user_id_type"`
}

type UserFaceGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}

type UserFaceUpdateReq struct {
	UserId     string  `path:"user_id"`
	UserIdType *string `query:"user_id_type"`
	File       *File   `body:""`
}

type UserFaceUpdateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type AccessRecordCreatedEventData struct {
	AccessRecordId *string `json:"access_record_id,omitempty"`
	UserId         *UserId `json:"user_id,omitempty"`
	DeviceId       *string `json:"device_id,omitempty"`
	IsClockIn      *bool   `json:"is_clock_in,omitempty"`
	IsDoorOpen     *bool   `json:"is_door_open,omitempty"`
	AccessTime     *string `json:"access_time,omitempty"`
}

type AccessRecordCreatedEvent struct {
	*lark.EventV2Base
	Event *AccessRecordCreatedEventData `json:"event"`
}

type UserUpdatedEventData struct {
	UserId       *UserId `json:"user_id,omitempty"`
	Card         *int    `json:"card,omitempty"`
	FaceUploaded *bool   `json:"face_uploaded,omitempty"`
}

type UserUpdatedEvent struct {
	*lark.EventV2Base
	Event *UserUpdatedEventData `json:"event"`
}
