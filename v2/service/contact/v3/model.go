// Package contact code generated by lark suite oapi sdk gen
package contact

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type AvatarInfo struct {
	Avatar72     *string `json:"avatar_72,omitempty"`
	Avatar240    *string `json:"avatar_240,omitempty"`
	Avatar640    *string `json:"avatar_640,omitempty"`
	AvatarOrigin *string `json:"avatar_origin,omitempty"`
}

type CustomAttrEvent struct {
	ContactFieldKey *string `json:"contact_field_key,omitempty"`
	FieldValueTypes *string `json:"field_value_types,omitempty"`
	I18nFieldNames  *string `json:"i18n_field_names,omitempty"`
	AllowOpenQuery  *string `json:"allow_open_query,omitempty"`
}

type DepartmentI18nName struct {
	ZhCn *string `json:"zh_cn,omitempty"`
	JaJp *string `json:"ja_jp,omitempty"`
	EnUs *string `json:"en_us,omitempty"`
}

type DepartmentStatus struct {
	IsDeleted *bool `json:"is_deleted,omitempty"`
}

type DepartmentUnit struct {
	UnitId   *string `json:"unit_id,omitempty"`
	UnitType *string `json:"unit_type,omitempty"`
	UnitName *string `json:"unit_name,omitempty"`
}

type GroupEvent struct {
	UserGroupId *string `json:"user_group_id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

type NotificationOption struct {
	Channels []string `json:"channels,omitempty"`
	Language *string  `json:"language,omitempty"`
}

type Scope struct {
	Departments []*Department `json:"departments,omitempty"`
	Users       []*User       `json:"users,omitempty"`
	UserGroups  []*UserGroup  `json:"user_groups,omitempty"`
}

type UserCustomAttr struct {
	Type  *string              `json:"type,omitempty"`
	Id    *string              `json:"id,omitempty"`
	Value *UserCustomAttrValue `json:"value,omitempty"`
}

type UserGroup struct {
	UserGroupId *string `json:"user_group_id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Type        *int    `json:"type,omitempty"`
	MemberCount *int    `json:"member_count,omitempty"`
	Status      *int    `json:"status,omitempty"`
}

type UserOrder struct {
	DepartmentId    *string `json:"department_id,omitempty"`
	UserOrder       *int    `json:"user_order,omitempty"`
	DepartmentOrder *int    `json:"department_order,omitempty"`
}

type UserPosition struct {
	PositionCode       *string `json:"position_code,omitempty"`
	PositionName       *string `json:"position_name,omitempty"`
	DepartmentId       *string `json:"department_id,omitempty"`
	LeaderUserId       *string `json:"leader_user_id,omitempty"`
	LeaderPositionCode *string `json:"leader_position_code,omitempty"`
	IsMajor            *bool   `json:"is_major,omitempty"`
}

type UserStatus struct {
	IsFrozen    *bool `json:"is_frozen,omitempty"`
	IsResigned  *bool `json:"is_resigned,omitempty"`
	IsActivated *bool `json:"is_activated,omitempty"`
}

type CustomAttr struct {
	Id       *string            `json:"id,omitempty"`
	Type     *string            `json:"type,omitempty"`
	Options  *CustomAttrOptions `json:"options,omitempty"`
	I18nName []*I18nContent     `json:"i18n_name,omitempty"`
}

type CustomAttrGenericUser struct {
	Id   *string `json:"id,omitempty"`
	Type *int    `json:"type,omitempty"`
}

type CustomAttrOption struct {
	Id    *string `json:"id,omitempty"`
	Value *string `json:"value,omitempty"`
	Name  *string `json:"name,omitempty"`
}

type CustomAttrOptions struct {
	DefaultOptionId *string             `json:"default_option_id,omitempty"`
	OptionType      *string             `json:"option_type,omitempty"`
	Options         []*CustomAttrOption `json:"options,omitempty"`
}

type Department struct {
	Name               *string             `json:"name,omitempty"`
	I18nName           *DepartmentI18nName `json:"i18n_name,omitempty"`
	ParentDepartmentId *string             `json:"parent_department_id,omitempty"`
	DepartmentId       *string             `json:"department_id,omitempty"`
	OpenDepartmentId   *string             `json:"open_department_id,omitempty"`
	LeaderUserId       *string             `json:"leader_user_id,omitempty"`
	ChatId             *string             `json:"chat_id,omitempty"`
	Order              *int64              `json:"order,omitempty,string"`
	UnitIds            []string            `json:"unit_ids,omitempty"`
	MemberCount        *int                `json:"member_count,omitempty"`
	Status             *DepartmentStatus   `json:"status,omitempty"`
	CreateGroupChat    *bool               `json:"create_group_chat,omitempty"`
}

type DepartmentEvent struct {
	Name               *string `json:"name,omitempty"`
	ParentDepartmentId *string `json:"parent_department_id,omitempty"`
	DepartmentId       *string `json:"department_id,omitempty"`
	OpenDepartmentId   *string `json:"open_department_id,omitempty"`
	LeaderUserId       *string `json:"leader_user_id,omitempty"`
	ChatId             *string `json:"chat_id,omitempty"`
	Order              *int    `json:"order,omitempty"`

	Status *DepartmentStatus `json:"status,omitempty"`
}

type DepartmentParent struct {
	DepartmentId *string  `json:"department_id,omitempty"`
	ParentIds    []string `json:"parent_ids,omitempty"`
}

type EmployeeTypeEnum struct {
	EnumId      *string        `json:"enum_id,omitempty"`
	EnumValue   *int64         `json:"enum_value,omitempty,string"`
	Content     *string        `json:"content,omitempty"`
	EnumType    *int           `json:"enum_type,omitempty"`
	EnumStatus  *int           `json:"enum_status,omitempty"`
	I18nContent []*I18nContent `json:"i18n_content,omitempty"`
}

type Group struct {
	Id                    *string `json:"id,omitempty"`
	Name                  *string `json:"name,omitempty"`
	Description           *string `json:"description,omitempty"`
	MemberUserCount       *int    `json:"member_user_count,omitempty"`
	MemberDepartmentCount *int    `json:"member_department_count,omitempty"`
}

type I18nContent struct {
	Locale *string `json:"locale,omitempty"`
	Value  *string `json:"value,omitempty"`
}

type Memberlist struct {
	MemberId   *string `json:"member_id,omitempty"`
	MemberType *string `json:"member_type,omitempty"`
}

type OldDepartmentObject struct {
	Status           *DepartmentStatus `json:"status,omitempty"`
	OpenDepartmentId *string           `json:"open_department_id,omitempty"`
}

type OldUserObject struct {
	DepartmentIds []string `json:"department_ids,omitempty"`
	OpenId        *string  `json:"open_id,omitempty"`
}

type UserCustomAttrValue struct {
	Text        *string                `json:"text,omitempty"`
	Url         *string                `json:"url,omitempty"`
	PcUrl       *string                `json:"pc_url,omitempty"`
	OptionId    *string                `json:"option_id,omitempty"`
	OptionValue *string                `json:"option_value,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PictureUrl  *string                `json:"picture_url,omitempty"`
	GenericUser *CustomAttrGenericUser `json:"generic_user,omitempty"`
}

type UserEvent struct {
	OpenId *string `json:"open_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Name   *string `json:"name,omitempty"`
	EnName *string `json:"en_name,omitempty"`
	Email  *string `json:"email,omitempty"`
	Mobile *string `json:"mobile,omitempty"`

	Gender        *int        `json:"gender,omitempty"`
	Avatar        *AvatarInfo `json:"avatar,omitempty"`
	Status        *UserStatus `json:"status,omitempty"`
	DepartmentIds []string    `json:"department_ids,omitempty"`
	LeaderUserId  *string     `json:"leader_user_id,omitempty"`
	City          *string     `json:"city,omitempty"`
	Country       *string     `json:"country,omitempty"`
	WorkStation   *string     `json:"work_station,omitempty"`
	JoinTime      *int        `json:"join_time,omitempty"`

	EmployeeNo   *string `json:"employee_no,omitempty"`
	EmployeeType *int    `json:"employee_type,omitempty"`

	Orders []*UserOrder `json:"orders,omitempty"`

	CustomAttrs []*UserCustomAttr `json:"custom_attrs,omitempty"`
}

type DepartmentCount struct {
	DepartmentId          *string `json:"department_id,omitempty"`
	DirectDepartmentCount *int    `json:"direct_department_count,omitempty"`
	DirectUserCount       *int    `json:"direct_user_count,omitempty"`
	DepartmentCount       *int    `json:"department_count,omitempty"`
	UserCount             *int    `json:"user_count,omitempty"`
}

type User struct {
	UnionId         *string     `json:"union_id,omitempty"`
	UserId          *string     `json:"user_id,omitempty"`
	OpenId          *string     `json:"open_id,omitempty"`
	Name            *string     `json:"name,omitempty"`
	EnName          *string     `json:"en_name,omitempty"`
	Email           *string     `json:"email,omitempty"`
	Mobile          *string     `json:"mobile,omitempty"`
	MobileVisible   *bool       `json:"mobile_visible,omitempty"`
	Gender          *int        `json:"gender,omitempty"`
	AvatarKey       *string     `json:"avatar_key,omitempty"`
	Avatar          *AvatarInfo `json:"avatar,omitempty"`
	Status          *UserStatus `json:"status,omitempty"`
	DepartmentIds   []string    `json:"department_ids,omitempty"`
	LeaderUserId    *string     `json:"leader_user_id,omitempty"`
	City            *string     `json:"city,omitempty"`
	Country         *string     `json:"country,omitempty"`
	WorkStation     *string     `json:"work_station,omitempty"`
	JoinTime        *int        `json:"join_time,omitempty"`
	IsTenantManager *bool       `json:"is_tenant_manager,omitempty"`
	EmployeeNo      *string     `json:"employee_no,omitempty"`
	EmployeeType    *int        `json:"employee_type,omitempty"`

	Orders          []*UserOrder      `json:"orders,omitempty"`
	CustomAttrs     []*UserCustomAttr `json:"custom_attrs,omitempty"`
	EnterpriseEmail *string           `json:"enterprise_email,omitempty"`

	JobTitle             *string             `json:"job_title,omitempty"`
	NeedSendNotification *bool               `json:"need_send_notification,omitempty"`
	NotificationOption   *NotificationOption `json:"notification_option,omitempty"`
	IsFrozen             *bool               `json:"is_frozen,omitempty"`
}

type CustomAttrListReq struct {
	PageSize  *int    `query:"page_size"`
	PageToken *string `query:"page_token"`
}

type CustomAttrListRespData struct {
	Items     []*CustomAttr `json:"items,omitempty"`
	PageToken *string       `json:"page_token,omitempty"`
	HasMore   *bool         `json:"has_more,omitempty"`
}

type CustomAttrListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CustomAttrListRespData `json:"data"`
}

type DepartmentGetReq struct {
	DepartmentId     string  `path:"department_id"`
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
}

type DepartmentGetRespData struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentGetRespData `json:"data"`
}

type DepartmentListReq struct {
	UserIdType         *string `query:"user_id_type"`
	DepartmentIdType   *string `query:"department_id_type"`
	ParentDepartmentId *string `query:"parent_department_id"`
	FetchChild         *bool   `query:"fetch_child"`
	PageToken          *string `query:"page_token"`
	PageSize           *int    `query:"page_size"`
}

type DepartmentListRespData struct {
	HasMore   *bool         `json:"has_more,omitempty"`
	PageToken *string       `json:"page_token,omitempty"`
	Items     []*Department `json:"items,omitempty"`
}

type DepartmentListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentListRespData `json:"data"`
}

type DepartmentPatchReq struct {
	DepartmentId     string      `path:"department_id"`
	UserIdType       *string     `query:"user_id_type"`
	DepartmentIdType *string     `query:"department_id_type"`
	Department       *Department `body:""`
}

type DepartmentPatchRespData struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentPatchRespData `json:"data"`
}

type DepartmentCreateReq struct {
	UserIdType       *string     `query:"user_id_type"`
	DepartmentIdType *string     `query:"department_id_type"`
	ClientToken      *string     `query:"client_token"`
	Department       *Department `body:""`
}

type DepartmentCreateRespData struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentCreateRespData `json:"data"`
}

type DepartmentDeleteReq struct {
	DepartmentId     string  `path:"department_id"`
	DepartmentIdType *string `query:"department_id_type"`
}

type DepartmentDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type DepartmentUpdateReq struct {
	DepartmentId     string      `path:"department_id"`
	UserIdType       *string     `query:"user_id_type"`
	DepartmentIdType *string     `query:"department_id_type"`
	Department       *Department `body:""`
}

type DepartmentUpdateRespData struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentUpdateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentUpdateRespData `json:"data"`
}

type DepartmentParentReq struct {
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
	DepartmentId     *string `query:"department_id"`
	PageToken        *string `query:"page_token"`
	PageSize         *int    `query:"page_size"`
}

type DepartmentParentRespData struct {
	HasMore   *bool         `json:"has_more,omitempty"`
	PageToken *string       `json:"page_token,omitempty"`
	Items     []*Department `json:"items,omitempty"`
}

type DepartmentParentResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentParentRespData `json:"data"`
}

type DepartmentSearchReqBody struct {
	Query *string `json:"query,omitempty"`
}

type DepartmentSearchReq struct {
	UserIdType       *string                  `query:"user_id_type"`
	DepartmentIdType *string                  `query:"department_id_type"`
	PageToken        *string                  `query:"page_token"`
	PageSize         *int                     `query:"page_size"`
	Body             *DepartmentSearchReqBody `body:""`
}

type DepartmentSearchRespData struct {
	Items     []*Department `json:"items,omitempty"`
	PageToken *string       `json:"page_token,omitempty"`
	HasMore   *bool         `json:"has_more,omitempty"`
}

type DepartmentSearchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DepartmentSearchRespData `json:"data"`
}

type EmployeeTypeEnumListReq struct {
	PageToken *string `query:"page_token"`
	PageSize  *int    `query:"page_size"`
}

type EmployeeTypeEnumListRespData struct {
	Items     []*EmployeeTypeEnum `json:"items,omitempty"`
	HasMore   *bool               `json:"has_more,omitempty"`
	PageToken *string             `json:"page_token,omitempty"`
}

type EmployeeTypeEnumListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *EmployeeTypeEnumListRespData `json:"data"`
}

type EmployeeTypeEnumCreateReq struct {
	EmployeeTypeEnum *EmployeeTypeEnum `body:""`
}

type EmployeeTypeEnumCreateRespData struct {
	EmployeeTypeEnum *EmployeeTypeEnum `json:"employee_type_enum,omitempty"`
}

type EmployeeTypeEnumCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *EmployeeTypeEnumCreateRespData `json:"data"`
}

type EmployeeTypeEnumDeleteReq struct {
	EnumId string `path:"enum_id"`
}

type EmployeeTypeEnumDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type EmployeeTypeEnumUpdateReq struct {
	EnumId           string            `path:"enum_id"`
	EmployeeTypeEnum *EmployeeTypeEnum `body:""`
}

type EmployeeTypeEnumUpdateRespData struct {
	EmployeeTypeEnum *EmployeeTypeEnum `json:"employee_type_enum,omitempty"`
}

type EmployeeTypeEnumUpdateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *EmployeeTypeEnumUpdateRespData `json:"data"`
}

type GroupCreateReqBody struct {
	GroupId     *string `json:"group_id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Type        *int    `json:"type,omitempty"`
}

type GroupCreateReq struct {
	Body *GroupCreateReqBody `body:""`
}

type GroupCreateRespData struct {
	GroupId *string `json:"group_id,omitempty"`
}

type GroupCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *GroupCreateRespData `json:"data"`
}

type GroupSimplelistReq struct {
	PageSize  *int    `query:"page_size"`
	PageToken *string `query:"page_token"`
	Type      *int    `query:"type"`
}

type GroupSimplelistRespData struct {
	Grouplist []*Group `json:"grouplist,omitempty"`
	PageToken *string  `json:"page_token,omitempty"`
	HasMore   *bool    `json:"has_more,omitempty"`
}

type GroupSimplelistResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *GroupSimplelistRespData `json:"data"`
}

type GroupDeleteReq struct {
	GroupId string `path:"group_id"`
}

type GroupDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type GroupGetReq struct {
	GroupId string `path:"group_id"`
}

type GroupGetRespData struct {
	Group *Group `json:"group,omitempty"`
}

type GroupGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *GroupGetRespData `json:"data"`
}

type GroupPatchReqBody struct {
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
}

type GroupPatchReq struct {
	GroupId string             `path:"group_id"`
	Body    *GroupPatchReqBody `body:""`
}

type GroupPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type GroupMemberSimplelistReq struct {
	GroupId      string  `path:"group_id"`
	PageSize     *int    `query:"page_size"`
	PageToken    *string `query:"page_token"`
	MemberIdType *string `query:"member_id_type"`
	MemberType   *string `query:"member_type"`
}

type GroupMemberSimplelistRespData struct {
	Memberlist []*Memberlist `json:"memberlist,omitempty"`
	PageToken  *string       `json:"page_token,omitempty"`
	HasMore    *bool         `json:"has_more,omitempty"`
}

type GroupMemberSimplelistResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *GroupMemberSimplelistRespData `json:"data"`
}

type GroupMemberAddReqBody struct {
	MemberType   *string `json:"member_type,omitempty"`
	MemberIdType *string `json:"member_id_type,omitempty"`
	MemberId     *string `json:"member_id,omitempty"`
}

type GroupMemberAddReq struct {
	GroupId string                 `path:"group_id"`
	Body    *GroupMemberAddReqBody `body:""`
}

type GroupMemberAddResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type GroupMemberRemoveReqBody struct {
	MemberType   *string `json:"member_type,omitempty"`
	MemberId     *string `json:"member_id,omitempty"`
	MemberIdType *string `json:"member_id_type,omitempty"`
}

type GroupMemberRemoveReq struct {
	GroupId string                    `path:"group_id"`
	Body    *GroupMemberRemoveReqBody `body:""`
}

type GroupMemberRemoveResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type UserDeleteReqBody struct {
	DepartmentChatAcceptorUserId *string `json:"department_chat_acceptor_user_id,omitempty"`
	ExternalChatAcceptorUserId   *string `json:"external_chat_acceptor_user_id,omitempty"`
	DocsAcceptorUserId           *string `json:"docs_acceptor_user_id,omitempty"`
	CalendarAcceptorUserId       *string `json:"calendar_acceptor_user_id,omitempty"`
	ApplicationAcceptorUserId    *string `json:"application_acceptor_user_id,omitempty"`
	HelpdeskAcceptorUserId       *string `json:"helpdesk_acceptor_user_id,omitempty"`
}

type UserDeleteReq struct {
	UserId     string             `path:"user_id"`
	UserIdType *string            `query:"user_id_type"`
	Body       *UserDeleteReqBody `body:""`
}

type UserDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type UserUpdateReq struct {
	UserId           string  `path:"user_id"`
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
	User             *User   `body:""`
}

type UserUpdateRespData struct {
	User *User `json:"user,omitempty"`
}

type UserUpdateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserUpdateRespData `json:"data"`
}

type UserCreateReq struct {
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
	ClientToken      *string `query:"client_token"`
	User             *User   `body:""`
}

type UserCreateRespData struct {
	User *User `json:"user,omitempty"`
}

type UserCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserCreateRespData `json:"data"`
}

type UserPatchReq struct {
	UserId           string  `path:"user_id"`
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
	User             *User   `body:""`
}

type UserPatchRespData struct {
	User *User `json:"user,omitempty"`
}

type UserPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserPatchRespData `json:"data"`
}

type UserGetReq struct {
	UserId           string  `path:"user_id"`
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
}

type UserGetRespData struct {
	User *User `json:"user,omitempty"`
}

type UserGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserGetRespData `json:"data"`
}

type UserListReq struct {
	UserIdType       *string `query:"user_id_type"`
	DepartmentIdType *string `query:"department_id_type"`
	DepartmentId     *string `query:"department_id"`
	PageToken        *string `query:"page_token"`
	PageSize         *int    `query:"page_size"`
}

type UserListRespData struct {
	HasMore   *bool   `json:"has_more,omitempty"`
	PageToken *string `json:"page_token,omitempty"`
	Items     []*User `json:"items,omitempty"`
}

type UserListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *UserListRespData `json:"data"`
}

type DepartmentCreatedEventData struct {
	Object *DepartmentEvent `json:"object,omitempty"`
}

type DepartmentCreatedEvent struct {
	*lark.EventV2Base
	Event *DepartmentCreatedEventData `json:"event"`
}

type DepartmentDeletedEventData struct {
	Object    *DepartmentEvent     `json:"object,omitempty"`
	OldObject *OldDepartmentObject `json:"old_object,omitempty"`
}

type DepartmentDeletedEvent struct {
	*lark.EventV2Base
	Event *DepartmentDeletedEventData `json:"event"`
}

type DepartmentUpdatedEventData struct {
	Object    *DepartmentEvent `json:"object,omitempty"`
	OldObject *DepartmentEvent `json:"old_object,omitempty"`
}

type DepartmentUpdatedEvent struct {
	*lark.EventV2Base
	Event *DepartmentUpdatedEventData `json:"event"`
}

type EmployeeTypeEnumActivedEventData struct {
	OldEnum *EmployeeTypeEnum `json:"old_enum,omitempty"`
	NewEnum *EmployeeTypeEnum `json:"new_enum,omitempty"`
}

type EmployeeTypeEnumActivedEvent struct {
	*lark.EventV2Base
	Event *EmployeeTypeEnumActivedEventData `json:"event"`
}

type EmployeeTypeEnumCreatedEventData struct {
	NewEnum *EmployeeTypeEnum `json:"new_enum,omitempty"`
}

type EmployeeTypeEnumCreatedEvent struct {
	*lark.EventV2Base
	Event *EmployeeTypeEnumCreatedEventData `json:"event"`
}

type EmployeeTypeEnumDeactivatedEventData struct {
	OldEnum *EmployeeTypeEnum `json:"old_enum,omitempty"`
	NewEnum *EmployeeTypeEnum `json:"new_enum,omitempty"`
}

type EmployeeTypeEnumDeactivatedEvent struct {
	*lark.EventV2Base
	Event *EmployeeTypeEnumDeactivatedEventData `json:"event"`
}

type EmployeeTypeEnumDeletedEventData struct {
	OldEnum *EmployeeTypeEnum `json:"old_enum,omitempty"`
}

type EmployeeTypeEnumDeletedEvent struct {
	*lark.EventV2Base
	Event *EmployeeTypeEnumDeletedEventData `json:"event"`
}

type EmployeeTypeEnumUpdatedEventData struct {
	OldEnum *EmployeeTypeEnum `json:"old_enum,omitempty"`
	NewEnum *EmployeeTypeEnum `json:"new_enum,omitempty"`
}

type EmployeeTypeEnumUpdatedEvent struct {
	*lark.EventV2Base
	Event *EmployeeTypeEnumUpdatedEventData `json:"event"`
}

type ScopeUpdatedEventData struct {
	Added   *Scope `json:"added,omitempty"`
	Removed *Scope `json:"removed,omitempty"`
}

type ScopeUpdatedEvent struct {
	*lark.EventV2Base
	Event *ScopeUpdatedEventData `json:"event"`
}

type UserCreatedEventData struct {
	Object *UserEvent `json:"object,omitempty"`
}

type UserCreatedEvent struct {
	*lark.EventV2Base
	Event *UserCreatedEventData `json:"event"`
}

type UserDeletedEventData struct {
	Object    *UserEvent     `json:"object,omitempty"`
	OldObject *OldUserObject `json:"old_object,omitempty"`
}

type UserDeletedEvent struct {
	*lark.EventV2Base
	Event *UserDeletedEventData `json:"event"`
}

type UserUpdatedEventData struct {
	Object    *UserEvent `json:"object,omitempty"`
	OldObject *UserEvent `json:"old_object,omitempty"`
}

type UserUpdatedEvent struct {
	*lark.EventV2Base
	Event *UserUpdatedEventData `json:"event"`
}
