// Package speech_to_text code generated by lark suite oapi sdk gen
package speech_to_text

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type FileConfig struct {
	FileId     *string `json:"file_id,omitempty"`
	Format     *string `json:"format,omitempty"`
	EngineType *string `json:"engine_type,omitempty"`
}

type Speech struct {
	Speech    *string `json:"speech,omitempty"`
	SpeechKey *string `json:"speech_key,omitempty"`
}

type StreamConfig struct {
	StreamId   *string `json:"stream_id,omitempty"`
	SequenceId *int    `json:"sequence_id,omitempty"`
	Action     *int    `json:"action,omitempty"`
	Format     *string `json:"format,omitempty"`
	EngineType *string `json:"engine_type,omitempty"`
}

type SpeechFileRecognizeReqBody struct {
	Speech *Speech     `json:"speech,omitempty"`
	Config *FileConfig `json:"config,omitempty"`
}

type SpeechFileRecognizeReq struct {
	Body *SpeechFileRecognizeReqBody `body:""`
}

type SpeechFileRecognizeRespData struct {
	RecognitionText *string `json:"recognition_text,omitempty"`
}

type SpeechFileRecognizeResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *SpeechFileRecognizeRespData `json:"data"`
}

type SpeechStreamRecognizeReqBody struct {
	Speech *Speech       `json:"speech,omitempty"`
	Config *StreamConfig `json:"config,omitempty"`
}

type SpeechStreamRecognizeReq struct {
	Body *SpeechStreamRecognizeReqBody `body:""`
}

type SpeechStreamRecognizeRespData struct {
	StreamId        *string `json:"stream_id,omitempty"`
	SequenceId      *int    `json:"sequence_id,omitempty"`
	RecognitionText *string `json:"recognition_text,omitempty"`
}

type SpeechStreamRecognizeResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *SpeechStreamRecognizeRespData `json:"data"`
}
