// Package search code generated by lark suite oapi sdk gen
package search

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type Acl struct {
	Access *string `json:"access,omitempty"`
	Value  *string `json:"value,omitempty"`
	Type   *string `json:"type,omitempty"`
}

type ConnectDataSource struct {
	ServiceUrl         *string `json:"service_url,omitempty"`
	ProjectName        *string `json:"project_name,omitempty"`
	DisplayName        *string `json:"display_name,omitempty"`
	Description        *string `json:"description,omitempty"`
	IconUrl            *string `json:"icon_url,omitempty"`
	ProjectDescription *string `json:"project_description,omitempty"`
	ContactEmail       *string `json:"contact_email,omitempty"`
	TenantName         *string `json:"tenant_name,omitempty"`
}

type DataSource struct {
	Id            *string `json:"id,omitempty"`
	Name          *string `json:"name,omitempty"`
	State         *int    `json:"state,omitempty"`
	Description   *string `json:"description,omitempty"`
	CreateTime    *string `json:"create_time,omitempty"`
	UpdateTime    *string `json:"update_time,omitempty"`
	IsExceedQuota *bool   `json:"is_exceed_quota,omitempty"`
	IconUrl       *string `json:"icon_url,omitempty"`
	Template      *string `json:"template,omitempty"`
}

type Item struct {
	Id             *string       `json:"id,omitempty"`
	Acl            []*Acl        `json:"acl,omitempty"`
	Metadata       *ItemMetadata `json:"metadata,omitempty"`
	StructuredData *string       `json:"structured_data,omitempty"`
	Content        *ItemContent  `json:"content,omitempty"`
	FieldAcl       *string       `json:"field_acl,omitempty"`
}

type ItemContent struct {
	Format      *string `json:"format,omitempty"`
	ContentData *string `json:"content_data,omitempty"`
}

type ItemMetadata struct {
	Title      *string `json:"title,omitempty"`
	SourceUrl  *string `json:"source_url,omitempty"`
	CreateTime *int    `json:"create_time,omitempty"`
	UpdateTime *int    `json:"update_time,omitempty"`
}

type Schema struct {
	PropertyDefinitions []*SchemaPropertyDefinition `json:"property_definitions,omitempty"`
	Id                  *string                     `json:"id,omitempty"`
}

type SchemaDisplayOption struct {
	DisplayLabel *string `json:"display_label,omitempty"`
	DisplayType  *string `json:"display_type,omitempty"`
}

type SchemaPropertyDefinition struct {
	Name                 *string              `json:"name,omitempty"`
	IsReturnable         *bool                `json:"is_returnable,omitempty"`
	IsRepeatable         *bool                `json:"is_repeatable,omitempty"`
	IsSortable           *bool                `json:"is_sortable,omitempty"`
	IsFacetable          *bool                `json:"is_facetable,omitempty"`
	IsWildcardSearchable *bool                `json:"is_wildcard_searchable,omitempty"`
	Type                 *string              `json:"type,omitempty"`
	DisplayOptions       *SchemaDisplayOption `json:"display_options,omitempty"`
}

type DataSourceCreateReq struct {
	DataSource *DataSource `body:""`
}

type DataSourceCreateRespData struct {
	DataSource *DataSource `json:"data_source,omitempty"`
}

type DataSourceCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DataSourceCreateRespData `json:"data"`
}

type DataSourceDeleteReq struct {
	DataSourceId string `path:"data_source_id"`
}

type DataSourceDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type DataSourceGetReq struct {
	DataSourceId string `path:"data_source_id"`
}

type DataSourceGetRespData struct {
	DataSource *DataSource `json:"data_source,omitempty"`
}

type DataSourceGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DataSourceGetRespData `json:"data"`
}

type DataSourceListReq struct {
	View      *int    `query:"view"`
	PageToken *string `query:"page_token"`
	PageSize  *int    `query:"page_size"`
}

type DataSourceListRespData struct {
	HasMore   *bool         `json:"has_more,omitempty"`
	PageToken *string       `json:"page_token,omitempty"`
	Items     []*DataSource `json:"items,omitempty"`
}

type DataSourceListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DataSourceListRespData `json:"data"`
}

type DataSourcePatchReqBody struct {
	Name        *string `json:"name,omitempty"`
	State       *int    `json:"state,omitempty"`
	Description *string `json:"description,omitempty"`
	IconUrl     *string `json:"icon_url,omitempty"`
}

type DataSourcePatchReq struct {
	DataSourceId string                  `path:"data_source_id"`
	Body         *DataSourcePatchReqBody `body:""`
}

type DataSourcePatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type DataSourceItemCreateReq struct {
	DataSourceId string `path:"data_source_id"`
	Item         *Item  `body:""`
}

type DataSourceItemCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type DataSourceItemDeleteReq struct {
	DataSourceId string `path:"data_source_id"`
	ItemId       string `path:"item_id"`
}

type DataSourceItemDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type DataSourceItemGetReq struct {
	DataSourceId string `path:"data_source_id"`
	ItemId       string `path:"item_id"`
}

type DataSourceItemGetRespData struct {
	Item *Item `json:"item,omitempty"`
}

type DataSourceItemGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *DataSourceItemGetRespData `json:"data"`
}
