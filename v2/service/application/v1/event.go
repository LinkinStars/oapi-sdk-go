// Package application code generated by lark suite oapi sdk gen
package application

import (
	"context"
	"github.com/larksuite/oapi-sdk-go/v2"
)

type applicationAppOpenEventHandler struct {
	handler func(context.Context, *lark.RawRequest, *ApplicationAppOpenEvent) error
}

func (h *applicationAppOpenEventHandler) Event() interface{} {
	return &ApplicationAppOpenEvent{}
}

func (h *applicationAppOpenEventHandler) Handle(ctx context.Context, req *lark.RawRequest, event interface{}) error {
	return h.handler(ctx, req, event.(*ApplicationAppOpenEvent))
}

func (a *application) AppOpenEventHandler(handler func(ctx context.Context, req *lark.RawRequest, event *ApplicationAppOpenEvent) error) {
	a.app.Webhook.EventHandler("app_open", &applicationAppOpenEventHandler{handler: handler})
}

type applicationAppStatusChangeEventHandler struct {
	handler func(context.Context, *lark.RawRequest, *ApplicationAppStatusChangeEvent) error
}

func (h *applicationAppStatusChangeEventHandler) Event() interface{} {
	return &ApplicationAppStatusChangeEvent{}
}

func (h *applicationAppStatusChangeEventHandler) Handle(ctx context.Context, req *lark.RawRequest, event interface{}) error {
	return h.handler(ctx, req, event.(*ApplicationAppStatusChangeEvent))
}

func (a *application) AppStatusChangeEventHandler(handler func(ctx context.Context, req *lark.RawRequest, event *ApplicationAppStatusChangeEvent) error) {
	a.app.Webhook.EventHandler("app_status_change", &applicationAppStatusChangeEventHandler{handler: handler})
}

type applicationAppUninstalledEventHandler struct {
	handler func(context.Context, *lark.RawRequest, *ApplicationAppUninstalledEvent) error
}

func (h *applicationAppUninstalledEventHandler) Event() interface{} {
	return &ApplicationAppUninstalledEvent{}
}

func (h *applicationAppUninstalledEventHandler) Handle(ctx context.Context, req *lark.RawRequest, event interface{}) error {
	return h.handler(ctx, req, event.(*ApplicationAppUninstalledEvent))
}

func (a *application) AppUninstalledEventHandler(handler func(ctx context.Context, req *lark.RawRequest, event *ApplicationAppUninstalledEvent) error) {
	a.app.Webhook.EventHandler("app_uninstalled", &applicationAppUninstalledEventHandler{handler: handler})
}

type applicationOrderPaidEventHandler struct {
	handler func(context.Context, *lark.RawRequest, *ApplicationOrderPaidEvent) error
}

func (h *applicationOrderPaidEventHandler) Event() interface{} {
	return &ApplicationOrderPaidEvent{}
}

func (h *applicationOrderPaidEventHandler) Handle(ctx context.Context, req *lark.RawRequest, event interface{}) error {
	return h.handler(ctx, req, event.(*ApplicationOrderPaidEvent))
}

func (a *application) OrderPaidEventHandler(handler func(ctx context.Context, req *lark.RawRequest, event *ApplicationOrderPaidEvent) error) {
	a.app.Webhook.EventHandler("order_paid", &applicationOrderPaidEventHandler{handler: handler})
}
