// Package application code generated by lark suite oapi sdk gen
package application

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type UserId struct {
	UserId  *string `json:"user_id,omitempty"`
	OpenId  *string `json:"open_id,omitempty"`
	UnionId *string `json:"union_id,omitempty"`
}

type AppAbility struct {
	Gadget           *Gadget            `json:"gadget,omitempty"`
	WebApp           *WebApp            `json:"web_app,omitempty"`
	Bot              *Bot               `json:"bot,omitempty"`
	WorkplaceWidgets []*WorkplaceWidget `json:"workplace_widgets,omitempty"`
	Navigate         *Navigate          `json:"navigate,omitempty"`
	CloudDoc         *CloudDoc          `json:"cloud_doc,omitempty"`
	DocsBlocks       []*DocsBlock       `json:"docs_blocks,omitempty"`
	MessageAction    *MessageAction     `json:"message_action,omitempty"`
	PlusMenu         *PlusMenu          `json:"plus_menu,omitempty"`
}

type AppBadge struct {
	UserId  *int64          `json:"user_id,omitempty,string"`
	Version *int64          `json:"version,omitempty,string"`
	Pc      *ClientBadgeNum `json:"pc,omitempty"`
	Mobile  *ClientBadgeNum `json:"mobile,omitempty"`
}

type AppCommonCategory struct {
	I18nKey  *string `json:"i18n_key,omitempty"`
	Category *string `json:"category,omitempty"`
}

type AppCustomCategory struct {
	I18nKey     *string  `json:"i18n_key,omitempty"`
	Description *string  `json:"description,omitempty"`
	AppIds      []string `json:"app_ids,omitempty"`
}

type AppCustomCategoryI18nInfo struct {
	I18nKey *string `json:"i18n_key,omitempty"`
	Name    *string `json:"name,omitempty"`
}

type AppI18nInfo struct {
	I18nKey     *string `json:"i18n_key,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	HelpUse     *string `json:"help_use,omitempty"`
}

type AppMessageTrendItem struct {
	ChatType    *string           `json:"chat_type,omitempty"`
	EventType   *string           `json:"event_type,omitempty"`
	MessageType *string           `json:"message_type,omitempty"`
	Trend       []*UsageTrendItem `json:"trend,omitempty"`
}

type AppScope struct {
	Scope       *string `json:"scope,omitempty"`
	Description *string `json:"description,omitempty"`
	Level       *string `json:"level,omitempty"`
}

type AppScopeI18nInfo struct {
	I18nKey     *string `json:"i18n_key,omitempty"`
	Description *string `json:"description,omitempty"`
}

type AppScopes struct {
	HighLevelScopes []string `json:"high_level_scopes,omitempty"`
	LowLevelScopes  []string `json:"low_level_scopes,omitempty"`
}

type AppUsageTrendItems struct {
	Id    *string           `json:"id,omitempty"`
	Trend []*UsageTrendItem `json:"trend,omitempty"`
}

type AppVersionId struct {
	Version   *string `json:"version,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
}

type AppVersionRemark struct {
	Remark       *string        `json:"remark,omitempty"`
	UpdateRemark *string        `json:"update_remark,omitempty"`
	Visibility   *AppVisibility `json:"visibility,omitempty"`
}

type AppVisibility struct {
	IsAll         *bool           `json:"is_all,omitempty"`
	VisibleList   *AppVisibleList `json:"visible_list,omitempty"`
	InvisibleList *AppVisibleList `json:"invisible_list,omitempty"`
}

type AppVisibleList struct {
	OpenIds       []string `json:"open_ids,omitempty"`
	DepartmentIds []string `json:"department_ids,omitempty"`
}

type Application struct {
	AppId            *string        `json:"app_id,omitempty"`
	CreatorId        *int64         `json:"creator_id,omitempty,string"`
	Status           *int           `json:"status,omitempty"`
	SceneType        *int           `json:"scene_type,omitempty"`
	RedirectUrls     []string       `json:"redirect_urls,omitempty"`
	OnlineVersionId  *int64         `json:"online_version_id,omitempty,string"`
	UnauditVersionId *int64         `json:"unaudit_version_id,omitempty,string"`
	AppName          *string        `json:"app_name,omitempty"`
	AvatarUrl        *string        `json:"avatar_url,omitempty"`
	Description      *string        `json:"description,omitempty"`
	Scopes           []*AppScope    `json:"scopes,omitempty"`
	BackHomeUrl      *string        `json:"back_home_url,omitempty"`
	I18n             []*AppI18nInfo `json:"i18n,omitempty"`
	PrimaryLanguage  *string        `json:"primary_language,omitempty"`
	CommonCategories []string       `json:"common_categories,omitempty"`
}

type ApplicationAppVersion struct {
	AppId            *string           `json:"app_id,omitempty"`
	Version          *string           `json:"version,omitempty"`
	VersionId        *int64            `json:"version_id,omitempty,string"`
	AppName          *string           `json:"app_name,omitempty"`
	AvatarUrl        *string           `json:"avatar_url,omitempty"`
	Description      *string           `json:"description,omitempty"`
	Scopes           []*AppScope       `json:"scopes,omitempty"`
	BackHomeUrl      *string           `json:"back_home_url,omitempty"`
	I18n             []*AppI18nInfo    `json:"i18n,omitempty"`
	CommonCategories []string          `json:"common_categories,omitempty"`
	Events           []string          `json:"events,omitempty"`
	Status           *int              `json:"status,omitempty"`
	CreateTime       *int64            `json:"create_time,omitempty,string"`
	PublishTime      *int64            `json:"publish_time,omitempty,string"`
	Ability          *AppAbility       `json:"ability,omitempty"`
	Remark           *AppVersionRemark `json:"remark,omitempty"`
}

type ApplicationVisibility struct {
	IsAll         *bool           `json:"is_all,omitempty"`
	VisibleList   *AppVisibleList `json:"visible_list,omitempty"`
	InvisibleList *AppVisibleList `json:"invisible_list,omitempty"`
}

type Block struct {
	BlockTypeId   *string          `json:"block_type_id,omitempty"`
	VersionId     *string          `json:"version_id,omitempty"`
	I18n          []*BlockI18nInfo `json:"i18n,omitempty"`
	MobileIconUrl *string          `json:"mobile_icon_url,omitempty"`
	PcIconUrl     *string          `json:"pc_icon_url,omitempty"`
}

type BlockI18nInfo struct {
	I18nKey *string `json:"i18n_key,omitempty"`
	Name    *string `json:"name,omitempty"`
}

type Bot struct {
	CardRequestUrl *string `json:"card_request_url,omitempty"`
}

type ClientBadgeNum struct {
	WebApp *int `json:"web_app,omitempty"`
	Gadget *int `json:"gadget,omitempty"`
}

type CloudDocI18nInfo struct {
	I18nKey          *string `json:"i18n_key,omitempty"`
	Name             *string `json:"name,omitempty"`
	ReadDescription  *string `json:"read_description,omitempty"`
	WriteDescription *string `json:"write_description,omitempty"`
}

type DocsBlock struct {
	BlockTypeId   *string          `json:"block_type_id,omitempty"`
	I18n          []*BlockI18nInfo `json:"i18n,omitempty"`
	MobileIconUrl *string          `json:"mobile_icon_url,omitempty"`
	PcIconUrl     *string          `json:"pc_icon_url,omitempty"`
}

type Gadget struct {
	EnablePcMode         *int     `json:"enable_pc_mode,omitempty"`
	SchemaUrls           []string `json:"schema_urls,omitempty"`
	PcUseMobilePkg       *bool    `json:"pc_use_mobile_pkg,omitempty"`
	PcVersion            *string  `json:"pc_version,omitempty"`
	MobileVersion        *string  `json:"mobile_version,omitempty"`
	MobileMinLarkVersion *string  `json:"mobile_min_lark_version,omitempty"`
	PcMinLarkVersion     *string  `json:"pc_min_lark_version,omitempty"`
}

type MessageAction struct {
	PcAppLink     *string                  `json:"pc_app_link,omitempty"`
	MobileAppLink *string                  `json:"mobile_app_link,omitempty"`
	I18n          []*MessageActionI18nInfo `json:"i18n,omitempty"`
}

type MessageActionI18nInfo struct {
	I18nKey *string `json:"i18n_key,omitempty"`
	Name    *string `json:"name,omitempty"`
}

type MessageOverviewItem struct {
	PageView      *int64  `json:"page_view,omitempty,string"`
	UniqueVisitor *int64  `json:"unique_visitor,omitempty,string"`
	ChatType      *string `json:"chat_type,omitempty"`
	MessageType   *string `json:"message_type,omitempty"`
	EventType     *string `json:"event_type,omitempty"`
}

type Miniprogram struct {
	EnablePcMode         *int     `json:"enable_pc_mode,omitempty"`
	SchemaUrls           []string `json:"schema_urls,omitempty"`
	PcUseMobilePkg       *bool    `json:"pc_use_mobile_pkg,omitempty"`
	PcVersionId          *string  `json:"pc_version_id,omitempty"`
	MobileVersionId      *string  `json:"mobile_version_id,omitempty"`
	MobileMinLarkVersion *string  `json:"mobile_min_lark_version,omitempty"`
	PcMinLarkVersion     *string  `json:"pc_min_lark_version,omitempty"`
}

type MsgAction struct {
	PcAppLink     *string              `json:"pc_app_link,omitempty"`
	MobileAppLink *string              `json:"mobile_app_link,omitempty"`
	I18n          []*MsgActionI18nInfo `json:"i18n,omitempty"`
}

type MsgActionI18nInfo struct {
	I18nKey *string `json:"i18n_key,omitempty"`
	Name    *string `json:"name,omitempty"`
}

type Navigate struct {
	Pc     *NavigateMeta `json:"pc,omitempty"`
	Mobile *NavigateMeta `json:"mobile,omitempty"`
}

type NavigateMeta struct {
	Version       *string `json:"version,omitempty"`
	ImageUrl      *string `json:"image_url,omitempty"`
	HoverImageUrl *string `json:"hover_image_url,omitempty"`
}

type PlusMenu struct {
	PcAppLink     *string `json:"pc_app_link,omitempty"`
	MobileAppLink *string `json:"mobile_app_link,omitempty"`
}

type Scope struct {
	ScopeName   *string `json:"scope_name,omitempty"`
	GrantStatus *int    `json:"grant_status,omitempty"`
}

type UsageOverviewItem struct {
	PageView      *int64  `json:"page_view,omitempty,string"`
	UniqueVisitor *int64  `json:"unique_visitor,omitempty,string"`
	DepartmentId  *string `json:"department_id,omitempty"`
}

type UsageTrendItem struct {
	Timestamp     *int64 `json:"timestamp,omitempty,string"`
	PageView      *int64 `json:"page_view,omitempty,string"`
	UniqueVisitor *int64 `json:"unique_visitor,omitempty,string"`
}

type UsageUser struct {
	UserId *string `json:"user_id,omitempty"`
}

type User struct {
	UserId *UserId `json:"user_id,omitempty"`
}

type WebApp struct {
	PcUrl     *string `json:"pc_url,omitempty"`
	MobileUrl *string `json:"mobile_url,omitempty"`
}

type WorkplaceWidget struct {
	MinLarkVersion *string `json:"min_lark_version,omitempty"`
}

type ApplicationAppUsage struct {
	MetricName  *string `json:"metric_name,omitempty"`
	MetricValue *int    `json:"metric_value,omitempty"`
}

type CloudDoc struct {
	SpaceUrl *string             `json:"space_url,omitempty"`
	I18n     []*CloudDocI18nInfo `json:"i18n,omitempty"`
	IconUrl  *string             `json:"icon_url,omitempty"`
	Mode     *int                `json:"mode,omitempty"`
}

type ApplicationAppUsageOverviewReqBody struct {
	Date         *string `json:"date,omitempty"`
	CycleType    *int    `json:"cycle_type,omitempty"`
	DepartmentId *string `json:"department_id,omitempty"`
	Ability      *string `json:"ability,omitempty"`
}

type ApplicationAppUsageOverviewReq struct {
	AppId            string                              `path:"app_id"`
	DepartmentIdType *string                             `query:"department_id_type"`
	Body             *ApplicationAppUsageOverviewReqBody `body:""`
}

type ApplicationAppUsageOverviewRespData struct {
	Items []*ApplicationAppUsage `json:"items,omitempty"`
}

type ApplicationAppUsageOverviewResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ApplicationAppUsageOverviewRespData `json:"data"`
}

type ApplicationVisibilityAddedEventData struct {
	Users  []*User `json:"users,omitempty"`
	Source *int    `json:"source,omitempty"`
}

type ApplicationVisibilityAddedEvent struct {
	*lark.EventV2Base
	Event *ApplicationVisibilityAddedEventData `json:"event"`
}
