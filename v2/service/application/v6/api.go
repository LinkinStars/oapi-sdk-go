// Package application code generated by lark suite oapi sdk gen
package application

import (
	"context"
	"net/http"

	"github.com/larksuite/oapi-sdk-go/v2"
)

type ApplicationService struct {
	ApplicationVisibility *applicationVisibility
	ApplicationAppUsage   *applicationAppUsage
}

func New(app *lark.App) *ApplicationService {
	a := &ApplicationService{}
	a.ApplicationVisibility = &applicationVisibility{app: app}
	a.ApplicationAppUsage = &applicationAppUsage{app: app}
	return a
}

type applicationVisibility struct {
	app *lark.App
}
type applicationAppUsage struct {
	app *lark.App
}

func (a *applicationAppUsage) Overview(ctx context.Context, req *ApplicationAppUsageOverviewReq, options ...lark.RequestOptionFunc) (*ApplicationAppUsageOverviewResp, error) {
	rawResp, err := a.app.SendRequestWithAccessTokenTypes(ctx, http.MethodPost,
		"/open-apis/application/v6/applications/:app_id/app_usage/overview", []lark.AccessTokenType{lark.AccessTokenTypeTenant}, req, options...)
	if err != nil {
		return nil, err
	}
	resp := &ApplicationAppUsageOverviewResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
