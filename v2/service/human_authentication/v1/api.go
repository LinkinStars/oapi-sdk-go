// Package human_authentication code generated by lark suite oapi sdk gen
package human_authentication

import (
	"context"
	"net/http"

	"github.com/larksuite/oapi-sdk-go/v2"
)

type HumanAuthenticationService struct {
	Identities *identities
}

func New(app *lark.App) *HumanAuthenticationService {
	h := &HumanAuthenticationService{}
	h.Identities = &identities{app: app}
	return h
}

type identities struct {
	app *lark.App
}

func (i *identities) Create(ctx context.Context, req *IdentityCreateReq, options ...lark.RequestOptionFunc) (*IdentityCreateResp, error) {
	rawResp, err := i.app.SendRequestWithAccessTokenTypes(ctx, http.MethodPost,
		"/open-apis/human_authentication/v1/identities", []lark.AccessTokenType{lark.AccessTokenTypeTenant}, req, options...)
	if err != nil {
		return nil, err
	}
	resp := &IdentityCreateResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
