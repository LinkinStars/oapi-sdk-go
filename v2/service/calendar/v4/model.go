// Package calendar code generated by lark suite oapi sdk gen
package calendar

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type UserId struct {
	UserId  *string `json:"user_id,omitempty"`
	OpenId  *string `json:"open_id,omitempty"`
	UnionId *string `json:"union_id,omitempty"`
}

type AclScope struct {
	Type   *string `json:"type,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

type AttendeeChatMember struct {
	RsvpStatus  *string `json:"rsvp_status,omitempty"`
	IsOptional  *bool   `json:"is_optional,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	IsOrganizer *bool   `json:"is_organizer,omitempty"`
	IsExternal  *bool   `json:"is_external,omitempty"`
}

type Calendar struct {
	CalendarId   *string `json:"calendar_id,omitempty"`
	Summary      *string `json:"summary,omitempty"`
	Description  *string `json:"description,omitempty"`
	Permissions  *string `json:"permissions,omitempty"`
	Color        *int    `json:"color,omitempty"`
	Type         *string `json:"type,omitempty"`
	SummaryAlias *string `json:"summary_alias,omitempty"`
	IsDeleted    *bool   `json:"is_deleted,omitempty"`
	IsThirdParty *bool   `json:"is_third_party,omitempty"`
	Role         *string `json:"role,omitempty"`
}

type CalendarAcl struct {
	AclId *string   `json:"acl_id,omitempty"`
	Role  *string   `json:"role,omitempty"`
	Scope *AclScope `json:"scope,omitempty"`
}

type CalendarEventAttendeeChatMember struct {
	RsvpStatus  *string `json:"rsvp_status,omitempty"`
	IsOptional  *bool   `json:"is_optional,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	IsOrganizer *bool   `json:"is_organizer,omitempty"`
	IsExternal  *bool   `json:"is_external,omitempty"`
}

type EventLocation struct {
	Name      *string  `json:"name,omitempty"`
	Address   *string  `json:"address,omitempty"`
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
}

type EventSearchFilter struct {
	StartTime *TimeInfo `json:"start_time,omitempty"`
	EndTime   *TimeInfo `json:"end_time,omitempty"`
	UserIds   []string  `json:"user_ids,omitempty"`
	RoomIds   []string  `json:"room_ids,omitempty"`
	ChatIds   []string  `json:"chat_ids,omitempty"`
}

type Freebusy struct {
	StartTime *string `json:"start_time,omitempty"`
	EndTime   *string `json:"end_time,omitempty"`
}

type Reminder struct {
	Minutes *int `json:"minutes,omitempty"`
}

type Schema struct {
	UiName   *string `json:"ui_name,omitempty"`
	UiStatus *string `json:"ui_status,omitempty"`
	AppLink  *string `json:"app_link,omitempty"`
}

type TimeInfo struct {
	Date      *string `json:"date,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Timezone  *string `json:"timezone,omitempty"`
}

type TimeoffEvent struct {
	TimeoffEventId *string `json:"timeoff_event_id,omitempty"`
	UserId         *string `json:"user_id,omitempty"`
	Timezone       *string `json:"timezone,omitempty"`
	StartTime      *string `json:"start_time,omitempty"`
	EndTime        *string `json:"end_time,omitempty"`
	Title          *string `json:"title,omitempty"`
	Description    *string `json:"description,omitempty"`
}

type AclScopeEvent struct {
	Type   *string `json:"type,omitempty"`
	UserId *UserId `json:"user_id,omitempty"`
}

type CalendarAclEvent struct {
	AclId      *string        `json:"acl_id,omitempty"`
	Role       *string        `json:"role,omitempty"`
	Scope      *AclScopeEvent `json:"scope,omitempty"`
	UserIdList []*UserId      `json:"user_id_list,omitempty"`
}

type CalendarAttendeeResourceCustomization struct {
	IndexKey     *string                `json:"index_key,omitempty"`
	InputContent *string                `json:"input_content,omitempty"`
	Options      []*CustomizationOption `json:"options,omitempty"`
}

type CalendarEvent struct {
	EventId          *string        `json:"event_id,omitempty"`
	Summary          *string        `json:"summary,omitempty"`
	Description      *string        `json:"description,omitempty"`
	NeedNotification *bool          `json:"need_notification,omitempty"`
	StartTime        *TimeInfo      `json:"start_time,omitempty"`
	EndTime          *TimeInfo      `json:"end_time,omitempty"`
	Vchat            *Vchat         `json:"vchat,omitempty"`
	Visibility       *string        `json:"visibility,omitempty"`
	AttendeeAbility  *string        `json:"attendee_ability,omitempty"`
	FreeBusyStatus   *string        `json:"free_busy_status,omitempty"`
	Location         *EventLocation `json:"location,omitempty"`
	Color            *int           `json:"color,omitempty"`
	Reminders        []*Reminder    `json:"reminders,omitempty"`
	Recurrence       *string        `json:"recurrence,omitempty"`
	Status           *string        `json:"status,omitempty"`
	IsException      *bool          `json:"is_exception,omitempty"`
	RecurringEventId *string        `json:"recurring_event_id,omitempty"`
	Schemas          []*Schema      `json:"schemas,omitempty"`
}

type CalendarEventAttendee struct {
	Type                  *string                                  `json:"type,omitempty"`
	AttendeeId            *string                                  `json:"attendee_id,omitempty"`
	RsvpStatus            *string                                  `json:"rsvp_status,omitempty"`
	IsOptional            *bool                                    `json:"is_optional,omitempty"`
	IsOrganizer           *bool                                    `json:"is_organizer,omitempty"`
	IsExternal            *bool                                    `json:"is_external,omitempty"`
	DisplayName           *string                                  `json:"display_name,omitempty"`
	ChatMembers           []*AttendeeChatMember                    `json:"chat_members,omitempty"`
	UserId                *string                                  `json:"user_id,omitempty"`
	ChatId                *string                                  `json:"chat_id,omitempty"`
	RoomId                *string                                  `json:"room_id,omitempty"`
	ThirdPartyEmail       *string                                  `json:"third_party_email,omitempty"`
	OperateId             *string                                  `json:"operate_id,omitempty"`
	ResourceCustomization []*CalendarAttendeeResourceCustomization `json:"resource_customization,omitempty"`
}

type CustomizationOption struct {
	OptionKey     *string `json:"option_key,omitempty"`
	OthersContent *string `json:"others_content,omitempty"`
}

type ExchangeBinding struct {
	AdminAccount      *string `json:"admin_account,omitempty"`
	ExchangeAccount   *string `json:"exchange_account,omitempty"`
	UserId            *string `json:"user_id,omitempty"`
	Status            *string `json:"status,omitempty"`
	ExchangeBindingId *string `json:"exchange_binding_id,omitempty"`
}

type Vchat struct {
	VcType      *string `json:"vc_type,omitempty"`
	IconType    *string `json:"icon_type,omitempty"`
	Description *string `json:"description,omitempty"`
	MeetingUrl  *string `json:"meeting_url,omitempty"`
}

type CalendarCreateReq struct {
	Calendar *Calendar `body:""`
}

type CalendarCreateRespData struct {
	Calendar *Calendar `json:"calendar,omitempty"`
}

type CalendarCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarCreateRespData `json:"data"`
}

type CalendarPatchReq struct {
	CalendarId string    `path:"calendar_id"`
	Calendar   *Calendar `body:""`
}

type CalendarPatchRespData struct {
	Calendar *Calendar `json:"calendar,omitempty"`
}

type CalendarPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarPatchRespData `json:"data"`
}

type CalendarDeleteReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarListReq struct {
	PageSize  *int    `query:"page_size"`
	PageToken *string `query:"page_token"`
	SyncToken *string `query:"sync_token"`
}

type CalendarListRespData struct {
	HasMore      *bool       `json:"has_more,omitempty"`
	PageToken    *string     `json:"page_token,omitempty"`
	SyncToken    *string     `json:"sync_token,omitempty"`
	CalendarList []*Calendar `json:"calendar_list,omitempty"`
}

type CalendarListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarListRespData `json:"data"`
}

type CalendarGetReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *Calendar `json:"data"`
}

type CalendarSearchReqBody struct {
	Query *string `json:"query,omitempty"`
}

type CalendarSearchReq struct {
	PageToken *string                `query:"page_token"`
	PageSize  *int                   `query:"page_size"`
	Body      *CalendarSearchReqBody `body:""`
}

type CalendarSearchRespData struct {
	Items     []*Calendar `json:"items,omitempty"`
	PageToken *string     `json:"page_token,omitempty"`
}

type CalendarSearchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarSearchRespData `json:"data"`
}

type CalendarUnsubscribeReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarUnsubscribeResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarSubscribeReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarSubscribeRespData struct {
	Calendar *Calendar `json:"calendar,omitempty"`
}

type CalendarSubscribeResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarSubscribeRespData `json:"data"`
}

type CalendarSubscriptionResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarAclListReq struct {
	CalendarId string  `path:"calendar_id"`
	UserIdType *string `query:"user_id_type"`
	PageToken  *string `query:"page_token"`
	PageSize   *int    `query:"page_size"`
}

type CalendarAclListRespData struct {
	Acls      []*CalendarAcl `json:"acls,omitempty"`
	HasMore   *bool          `json:"has_more,omitempty"`
	PageToken *string        `json:"page_token,omitempty"`
}

type CalendarAclListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarAclListRespData `json:"data"`
}

type CalendarAclDeleteReq struct {
	CalendarId string `path:"calendar_id"`
	AclId      string `path:"acl_id"`
}

type CalendarAclDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarAclCreateReq struct {
	CalendarId  string       `path:"calendar_id"`
	UserIdType  *string      `query:"user_id_type"`
	CalendarAcl *CalendarAcl `body:""`
}

type CalendarAclCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarAcl `json:"data"`
}

type CalendarAclSubscriptionReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarAclSubscriptionResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarEventDeleteReq struct {
	CalendarId       string `path:"calendar_id"`
	EventId          string `path:"event_id"`
	NeedNotification *bool  `query:"need_notification"`
}

type CalendarEventDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarEventGetReq struct {
	CalendarId string `path:"calendar_id"`
	EventId    string `path:"event_id"`
}

type CalendarEventGetRespData struct {
	Event *CalendarEvent `json:"event,omitempty"`
}

type CalendarEventGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventGetRespData `json:"data"`
}

type CalendarEventCreateReq struct {
	CalendarId    string         `path:"calendar_id"`
	CalendarEvent *CalendarEvent `body:""`
}

type CalendarEventCreateRespData struct {
	Event *CalendarEvent `json:"event,omitempty"`
}

type CalendarEventCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventCreateRespData `json:"data"`
}

type CalendarEventListReq struct {
	CalendarId string  `path:"calendar_id"`
	PageSize   *int    `query:"page_size"`
	AnchorTime *string `query:"anchor_time"`
	PageToken  *string `query:"page_token"`
	SyncToken  *string `query:"sync_token"`
	StartTime  *string `query:"start_time"`
	EndTime    *string `query:"end_time"`
}

type CalendarEventListRespData struct {
	HasMore   *bool            `json:"has_more,omitempty"`
	PageToken *string          `json:"page_token,omitempty"`
	SyncToken *string          `json:"sync_token,omitempty"`
	Items     []*CalendarEvent `json:"items,omitempty"`
}

type CalendarEventListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventListRespData `json:"data"`
}

type CalendarEventPatchReq struct {
	CalendarId    string         `path:"calendar_id"`
	EventId       string         `path:"event_id"`
	CalendarEvent *CalendarEvent `body:""`
}

type CalendarEventPatchRespData struct {
	Event *CalendarEvent `json:"event,omitempty"`
}

type CalendarEventPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventPatchRespData `json:"data"`
}

type CalendarEventSearchReqBody struct {
	Query  *string            `json:"query,omitempty"`
	Filter *EventSearchFilter `json:"filter,omitempty"`
}

type CalendarEventSearchReq struct {
	CalendarId string                      `path:"calendar_id"`
	UserIdType *string                     `query:"user_id_type"`
	PageToken  *string                     `query:"page_token"`
	PageSize   *int                        `query:"page_size"`
	Body       *CalendarEventSearchReqBody `body:""`
}

type CalendarEventSearchRespData struct {
	Items     []*CalendarEvent `json:"items,omitempty"`
	PageToken *string          `json:"page_token,omitempty"`
}

type CalendarEventSearchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventSearchRespData `json:"data"`
}

type CalendarEventSubscriptionReq struct {
	CalendarId string `path:"calendar_id"`
}

type CalendarEventSubscriptionResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarEventAttendeeListReq struct {
	CalendarId string  `path:"calendar_id"`
	EventId    string  `path:"event_id"`
	UserIdType *string `query:"user_id_type"`
	PageToken  *string `query:"page_token"`
	PageSize   *int    `query:"page_size"`
}

type CalendarEventAttendeeListRespData struct {
	Items     []*CalendarEventAttendee `json:"items,omitempty"`
	HasMore   *bool                    `json:"has_more,omitempty"`
	PageToken *string                  `json:"page_token,omitempty"`
}

type CalendarEventAttendeeListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventAttendeeListRespData `json:"data"`
}

type CalendarEventAttendeeBatchDeleteReqBody struct {
	AttendeeIds      []string `json:"attendee_ids,omitempty"`
	NeedNotification *bool    `json:"need_notification,omitempty"`
}

type CalendarEventAttendeeBatchDeleteReq struct {
	CalendarId string                                   `path:"calendar_id"`
	EventId    string                                   `path:"event_id"`
	Body       *CalendarEventAttendeeBatchDeleteReqBody `body:""`
}

type CalendarEventAttendeeBatchDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type CalendarEventAttendeeCreateReqBody struct {
	Attendees        []*CalendarEventAttendee `json:"attendees,omitempty"`
	NeedNotification *bool                    `json:"need_notification,omitempty"`
}

type CalendarEventAttendeeCreateReq struct {
	CalendarId string                              `path:"calendar_id"`
	EventId    string                              `path:"event_id"`
	UserIdType *string                             `query:"user_id_type"`
	Body       *CalendarEventAttendeeCreateReqBody `body:""`
}

type CalendarEventAttendeeCreateRespData struct {
	Attendees []*CalendarEventAttendee `json:"attendees,omitempty"`
}

type CalendarEventAttendeeCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventAttendeeCreateRespData `json:"data"`
}

type CalendarEventAttendeeChatMemberListReq struct {
	CalendarId string  `path:"calendar_id"`
	EventId    string  `path:"event_id"`
	AttendeeId string  `path:"attendee_id"`
	PageToken  *string `query:"page_token"`
	PageSize   *int    `query:"page_size"`
}

type CalendarEventAttendeeChatMemberListRespData struct {
	Items     []*CalendarEventAttendeeChatMember `json:"items,omitempty"`
	HasMore   *bool                              `json:"has_more,omitempty"`
	PageToken *string                            `json:"page_token,omitempty"`
}

type CalendarEventAttendeeChatMemberListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *CalendarEventAttendeeChatMemberListRespData `json:"data"`
}

type FreebusyListReqBody struct {
	TimeMin *string `json:"time_min,omitempty"`
	TimeMax *string `json:"time_max,omitempty"`
	UserId  *string `json:"user_id,omitempty"`
	RoomId  *string `json:"room_id,omitempty"`
}

type FreebusyListReq struct {
	UserIdType *string              `query:"user_id_type"`
	Body       *FreebusyListReqBody `body:""`
}

type FreebusyListRespData struct {
	FreebusyList []*Freebusy `json:"freebusy_list,omitempty"`
}

type FreebusyListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FreebusyListRespData `json:"data"`
}

type SettingGenerateCaldavConfReqBody struct {
	DeviceName *string `json:"device_name,omitempty"`
}

type SettingGenerateCaldavConfReq struct {
	Body *SettingGenerateCaldavConfReqBody `body:""`
}

type SettingGenerateCaldavConfRespData struct {
	Password      *string `json:"password,omitempty"`
	UserName      *string `json:"user_name,omitempty"`
	ServerAddress *string `json:"server_address,omitempty"`
	DeviceName    *string `json:"device_name,omitempty"`
}

type SettingGenerateCaldavConfResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *SettingGenerateCaldavConfRespData `json:"data"`
}

type TimeoffEventDeleteReq struct {
	TimeoffEventId string `path:"timeoff_event_id"`
}

type TimeoffEventDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type TimeoffEventCreateReq struct {
	UserIdType   *string       `query:"user_id_type"`
	TimeoffEvent *TimeoffEvent `body:""`
}

type TimeoffEventCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *TimeoffEvent `json:"data"`
}

type CalendarChangedEventData struct {
	UserIdList []*UserId `json:"user_id_list,omitempty"`
}

type CalendarChangedEvent struct {
	*lark.EventV2Base
	Event *CalendarChangedEventData `json:"event"`
}

type CalendarAclCreatedEventData struct {
	AclId      *string        `json:"acl_id,omitempty"`
	Role       *string        `json:"role,omitempty"`
	Scope      *AclScopeEvent `json:"scope,omitempty"`
	UserIdList []*UserId      `json:"user_id_list,omitempty"`
}

type CalendarAclCreatedEvent struct {
	*lark.EventV2Base
	Event *CalendarAclCreatedEventData `json:"event"`
}

type CalendarAclDeletedEventData struct {
	AclId      *string        `json:"acl_id,omitempty"`
	Role       *string        `json:"role,omitempty"`
	Scope      *AclScopeEvent `json:"scope,omitempty"`
	UserIdList []*UserId      `json:"user_id_list,omitempty"`
}

type CalendarAclDeletedEvent struct {
	*lark.EventV2Base
	Event *CalendarAclDeletedEventData `json:"event"`
}

type CalendarEventChangedEventData struct {
	CalendarId *string   `json:"calendar_id,omitempty"`
	UserIdList []*UserId `json:"user_id_list,omitempty"`
}

type CalendarEventChangedEvent struct {
	*lark.EventV2Base
	Event *CalendarEventChangedEventData `json:"event"`
}
