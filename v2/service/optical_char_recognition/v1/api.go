// Package optical_char_recognition code generated by lark suite oapi sdk gen
package optical_char_recognition

import (
	"context"
	"net/http"

	"github.com/larksuite/oapi-sdk-go/v2"
)

type OpticalCharRecognitionService struct {
	Image *image
}

func New(app *lark.App) *OpticalCharRecognitionService {
	o := &OpticalCharRecognitionService{}
	o.Image = &image{app: app}
	return o
}

type image struct {
	app *lark.App
}

func (i *image) BasicRecognize(ctx context.Context, req *ImageBasicRecognizeReq, options ...lark.RequestOptionFunc) (*ImageBasicRecognizeResp, error) {
	rawResp, err := i.app.SendRequestWithAccessTokenTypes(ctx, http.MethodPost,
		"/open-apis/optical_char_recognition/v1/image/basic_recognize", []lark.AccessTokenType{lark.AccessTokenTypeTenant}, req, options...)
	if err != nil {
		return nil, err
	}
	resp := &ImageBasicRecognizeResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
