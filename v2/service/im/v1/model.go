// Package im code generated by lark suite oapi sdk gen
package im

import (
	"io"

	"github.com/larksuite/oapi-sdk-go/v2"
)

type UserId struct {
	UserId  *string `json:"user_id,omitempty"`
	OpenId  *string `json:"open_id,omitempty"`
	UnionId *string `json:"union_id,omitempty"`
}

type Chat struct {
	ChatId         *string    `json:"chat_id,omitempty"`
	Avatar         *string    `json:"avatar,omitempty"`
	Name           *string    `json:"name,omitempty"`
	Description    *string    `json:"description,omitempty"`
	I18nNames      *I18nNames `json:"i18n_names,omitempty"`
	OnlyOwnerAdd   *bool      `json:"only_owner_add,omitempty"`
	ShareAllowed   *bool      `json:"share_allowed,omitempty"`
	OnlyOwnerAtAll *bool      `json:"only_owner_at_all,omitempty"`
	OnlyOwnerEdit  *bool      `json:"only_owner_edit,omitempty"`
	OwnerUserId    *string    `json:"owner_user_id,omitempty"`
	Type           *string    `json:"type,omitempty"`
}

type ChatMember struct {
	UserId *string `json:"user_id,omitempty"`
}

type ChatMemberBot struct {
	BotId *string `json:"bot_id,omitempty"`
}

type ChatMemberUser struct {
	Name      *string `json:"name,omitempty"`
	TenantKey *string `json:"tenant_key,omitempty"`
	UserId    *UserId `json:"user_id,omitempty"`
}

type ChatMembers struct {
	UserId *string `json:"user_id,omitempty"`
}

type ChatChange struct {
	Avatar                 *string    `json:"avatar,omitempty"`
	Name                   *string    `json:"name,omitempty"`
	Description            *string    `json:"description,omitempty"`
	I18nNames              *I18nNames `json:"i18n_names,omitempty"`
	AddMemberPermission    *string    `json:"add_member_permission,omitempty"`
	ShareCardPermission    *string    `json:"share_card_permission,omitempty"`
	AtAllPermission        *string    `json:"at_all_permission,omitempty"`
	EditPermission         *string    `json:"edit_permission,omitempty"`
	MembershipApproval     *string    `json:"membership_approval,omitempty"`
	JoinMessageVisibility  *string    `json:"join_message_visibility,omitempty"`
	LeaveMessageVisibility *string    `json:"leave_message_visibility,omitempty"`
	ModerationPermission   *string    `json:"moderation_permission,omitempty"`
	OwnerId                *UserId    `json:"owner_id,omitempty"`
}

type Emoji struct {
	EmojiType *string `json:"emoji_type,omitempty"`
}

type EventMessage struct {
	MessageId   *string         `json:"message_id,omitempty"`
	RootId      *string         `json:"root_id,omitempty"`
	ParentId    *string         `json:"parent_id,omitempty"`
	CreateTime  *int64          `json:"create_time,omitempty,string"`
	ChatId      *string         `json:"chat_id,omitempty"`
	ChatType    *string         `json:"chat_type,omitempty"`
	MessageType *string         `json:"message_type,omitempty"`
	Content     *string         `json:"content,omitempty"`
	Mentions    []*MentionEvent `json:"mentions,omitempty"`
}

type EventMessageReader struct {
	ReaderId  *UserId `json:"reader_id,omitempty"`
	ReadTime  *string `json:"read_time,omitempty"`
	TenantKey *string `json:"tenant_key,omitempty"`
}

type EventSender struct {
	SenderId   *UserId `json:"sender_id,omitempty"`
	SenderType *string `json:"sender_type,omitempty"`
	TenantKey  *string `json:"tenant_key,omitempty"`
}

type I18nNames struct {
	ZhCn *string `json:"zh_cn,omitempty"`
	EnUs *string `json:"en_us,omitempty"`
	JaJp *string `json:"ja_jp,omitempty"`
}

type ListChat struct {
	ChatId      *string `json:"chat_id,omitempty"`
	Avatar      *string `json:"avatar,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	OwnerId     *string `json:"owner_id,omitempty"`
	OwnerIdType *string `json:"owner_id_type,omitempty"`
	External    *bool   `json:"external,omitempty"`
	TenantKey   *string `json:"tenant_key,omitempty"`
}

type ListEventModerator struct {
	TenantKey *string `json:"tenant_key,omitempty"`
	UserId    *UserId `json:"user_id,omitempty"`
}

type ListMember struct {
	MemberIdType *string `json:"member_id_type,omitempty"`
	MemberId     *string `json:"member_id,omitempty"`
	Name         *string `json:"name,omitempty"`
	TenantKey    *string `json:"tenant_key,omitempty"`
}

type ListModerator struct {
	UserIdType *string `json:"user_id_type,omitempty"`
	UserId     *string `json:"user_id,omitempty"`
	TenantKey  *string `json:"tenant_key,omitempty"`
}

type Mention struct {
	Key       *string `json:"key,omitempty"`
	Id        *string `json:"id,omitempty"`
	IdType    *string `json:"id_type,omitempty"`
	Name      *string `json:"name,omitempty"`
	TenantKey *string `json:"tenant_key,omitempty"`
}

type Message struct {
	MessageId      *string      `json:"message_id,omitempty"`
	RootId         *string      `json:"root_id,omitempty"`
	ParentId       *string      `json:"parent_id,omitempty"`
	MsgType        *string      `json:"msg_type,omitempty"`
	CreateTime     *int64       `json:"create_time,omitempty,string"`
	UpdateTime     *int64       `json:"update_time,omitempty,string"`
	Deleted        *bool        `json:"deleted,omitempty"`
	Updated        *bool        `json:"updated,omitempty"`
	ChatId         *string      `json:"chat_id,omitempty"`
	Sender         *Sender      `json:"sender,omitempty"`
	Body           *MessageBody `json:"body,omitempty"`
	Mentions       []*Mention   `json:"mentions,omitempty"`
	UpperMessageId *string      `json:"upper_message_id,omitempty"`
}

type MessageBody struct {
	Content *string `json:"content,omitempty"`
}

type ModeratorList struct {
	AddedMemberList   []*ListEventModerator `json:"added_member_list,omitempty"`
	RemovedMemberList []*ListEventModerator `json:"removed_member_list,omitempty"`
}

type Operator struct {
	OperatorId   *string `json:"operator_id,omitempty"`
	OperatorType *string `json:"operator_type,omitempty"`
}

type ReadUser struct {
	UserIdType *string `json:"user_id_type,omitempty"`
	UserId     *string `json:"user_id,omitempty"`
	Timestamp  *string `json:"timestamp,omitempty"`
	TenantKey  *string `json:"tenant_key,omitempty"`
}

type Sender struct {
	Id         *string `json:"id,omitempty"`
	IdType     *string `json:"id_type,omitempty"`
	SenderType *string `json:"sender_type,omitempty"`
	TenantKey  *string `json:"tenant_key,omitempty"`
}

type UrgentReceivers struct {
	UserIdList []string `json:"user_id_list,omitempty"`
}

type BatchMessage struct {
	BatchMessageId      *string              `json:"batch_message_id,omitempty"`
	BatchSendProgress   *BatchSendProgress   `json:"batch_send_progress,omitempty"`
	BatchRecallProgress *BatchRecallProgress `json:"batch_recall_progress,omitempty"`
}

type BatchMessageReadUser struct {
	ReadCount  *string `json:"read_count,omitempty"`
	TotalCount *string `json:"total_count,omitempty"`
}

type BatchRecallProgress struct {
	RecallCount      *string `json:"recall_count,omitempty"`
	TotalRecallCount *string `json:"total_recall_count,omitempty"`
}

type BatchSendProgress struct {
	SendCount      *string `json:"send_count,omitempty"`
	TotalSendCount *string `json:"total_send_count,omitempty"`
}

type ChatManagers struct {
	ManagerId *int64 `json:"manager_id,omitempty,string"`
}

type MentionEvent struct {
	Key       *string `json:"key,omitempty"`
	Id        *UserId `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	TenantKey *string `json:"tenant_key,omitempty"`
}

type MessageReaction struct {
	ReactionId   *string   `json:"reaction_id,omitempty"`
	Operator     *Operator `json:"operator,omitempty"`
	ActionTime   *int64    `json:"action_time,omitempty,string"`
	ReactionType *Emoji    `json:"reaction_type,omitempty"`
}

type ChatUpdateReqBody struct {
	Avatar                 *string    `json:"avatar,omitempty"`
	Name                   *string    `json:"name,omitempty"`
	Description            *string    `json:"description,omitempty"`
	I18nNames              *I18nNames `json:"i18n_names,omitempty"`
	AddMemberPermission    *string    `json:"add_member_permission,omitempty"`
	ShareCardPermission    *string    `json:"share_card_permission,omitempty"`
	AtAllPermission        *string    `json:"at_all_permission,omitempty"`
	EditPermission         *string    `json:"edit_permission,omitempty"`
	OwnerId                *string    `json:"owner_id,omitempty"`
	JoinMessageVisibility  *string    `json:"join_message_visibility,omitempty"`
	LeaveMessageVisibility *string    `json:"leave_message_visibility,omitempty"`
	MembershipApproval     *string    `json:"membership_approval,omitempty"`
}

type ChatUpdateReq struct {
	ChatId     string             `path:"chat_id"`
	UserIdType *string            `query:"user_id_type"`
	Body       *ChatUpdateReqBody `body:""`
}

type ChatUpdateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type ChatListReq struct {
	UserIdType *string `query:"user_id_type"`
	PageToken  *string `query:"page_token"`
	PageSize   *int    `query:"page_size"`
}

type ChatListRespData struct {
	Items     []*ListChat `json:"items,omitempty"`
	PageToken *string     `json:"page_token,omitempty"`
	HasMore   *bool       `json:"has_more,omitempty"`
}

type ChatListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatListRespData `json:"data"`
}

type ChatDeleteReq struct {
	ChatId string `path:"chat_id"`
}

type ChatDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type ChatGetReq struct {
	ChatId     string  `path:"chat_id"`
	UserIdType *string `query:"user_id_type"`
}

type ChatGetRespData struct {
	Avatar                 *string    `json:"avatar,omitempty"`
	Name                   *string    `json:"name,omitempty"`
	Description            *string    `json:"description,omitempty"`
	I18nNames              *I18nNames `json:"i18n_names,omitempty"`
	AddMemberPermission    *string    `json:"add_member_permission,omitempty"`
	ShareCardPermission    *string    `json:"share_card_permission,omitempty"`
	AtAllPermission        *string    `json:"at_all_permission,omitempty"`
	EditPermission         *string    `json:"edit_permission,omitempty"`
	OwnerIdType            *string    `json:"owner_id_type,omitempty"`
	OwnerId                *string    `json:"owner_id,omitempty"`
	ChatMode               *string    `json:"chat_mode,omitempty"`
	ChatType               *string    `json:"chat_type,omitempty"`
	ChatTag                *string    `json:"chat_tag,omitempty"`
	JoinMessageVisibility  *string    `json:"join_message_visibility,omitempty"`
	LeaveMessageVisibility *string    `json:"leave_message_visibility,omitempty"`
	MembershipApproval     *string    `json:"membership_approval,omitempty"`
	ModerationPermission   *string    `json:"moderation_permission,omitempty"`
	External               *bool      `json:"external,omitempty"`
	TenantKey              *string    `json:"tenant_key,omitempty"`
}

type ChatGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatGetRespData `json:"data"`
}

type ChatCreateReqBody struct {
	Avatar                 *string    `json:"avatar,omitempty"`
	Name                   *string    `json:"name,omitempty"`
	Description            *string    `json:"description,omitempty"`
	I18nNames              *I18nNames `json:"i18n_names,omitempty"`
	OwnerId                *string    `json:"owner_id,omitempty"`
	ChatMode               *string    `json:"chat_mode,omitempty"`
	ChatType               *string    `json:"chat_type,omitempty"`
	External               *bool      `json:"external,omitempty"`
	JoinMessageVisibility  *string    `json:"join_message_visibility,omitempty"`
	LeaveMessageVisibility *string    `json:"leave_message_visibility,omitempty"`
	MembershipApproval     *string    `json:"membership_approval,omitempty"`
}

type ChatCreateReq struct {
	UserIdType *string            `query:"user_id_type"`
	Body       *ChatCreateReqBody `body:""`
}

type ChatCreateRespData struct {
	ChatId                 *string    `json:"chat_id,omitempty"`
	Avatar                 *string    `json:"avatar,omitempty"`
	Name                   *string    `json:"name,omitempty"`
	Description            *string    `json:"description,omitempty"`
	I18nNames              *I18nNames `json:"i18n_names,omitempty"`
	OwnerId                *string    `json:"owner_id,omitempty"`
	OwnerIdType            *string    `json:"owner_id_type,omitempty"`
	AddMemberPermission    *string    `json:"add_member_permission,omitempty"`
	ShareCardPermission    *string    `json:"share_card_permission,omitempty"`
	AtAllPermission        *string    `json:"at_all_permission,omitempty"`
	EditPermission         *string    `json:"edit_permission,omitempty"`
	ChatMode               *string    `json:"chat_mode,omitempty"`
	ChatType               *string    `json:"chat_type,omitempty"`
	ChatTag                *string    `json:"chat_tag,omitempty"`
	External               *bool      `json:"external,omitempty"`
	TenantKey              *string    `json:"tenant_key,omitempty"`
	JoinMessageVisibility  *string    `json:"join_message_visibility,omitempty"`
	LeaveMessageVisibility *string    `json:"leave_message_visibility,omitempty"`
	MembershipApproval     *string    `json:"membership_approval,omitempty"`
	ModerationPermission   *string    `json:"moderation_permission,omitempty"`
}

type ChatCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatCreateRespData `json:"data"`
}

type ChatSearchReq struct {
	UserIdType *string `query:"user_id_type"`
	Query      *string `query:"query"`
	PageToken  *string `query:"page_token"`
	PageSize   *int    `query:"page_size"`
}

type ChatSearchRespData struct {
	Items     []*ListChat `json:"items,omitempty"`
	PageToken *string     `json:"page_token,omitempty"`
	HasMore   *bool       `json:"has_more,omitempty"`
}

type ChatSearchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatSearchRespData `json:"data"`
}

type ChatAnnouncementGetReq struct {
	ChatId     string  `path:"chat_id"`
	UserIdType *string `query:"user_id_type"`
}

type ChatAnnouncementGetRespData struct {
	Content        *string `json:"content,omitempty"`
	Revision       *string `json:"revision,omitempty"`
	CreateTime     *string `json:"create_time,omitempty"`
	UpdateTime     *string `json:"update_time,omitempty"`
	OwnerIdType    *string `json:"owner_id_type,omitempty"`
	OwnerId        *string `json:"owner_id,omitempty"`
	ModifierIdType *string `json:"modifier_id_type,omitempty"`
	ModifierId     *string `json:"modifier_id,omitempty"`
}

type ChatAnnouncementGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatAnnouncementGetRespData `json:"data"`
}

type ChatAnnouncementPatchReqBody struct {
	Revision *string  `json:"revision,omitempty"`
	Requests []string `json:"requests,omitempty"`
}

type ChatAnnouncementPatchReq struct {
	ChatId string                        `path:"chat_id"`
	Body   *ChatAnnouncementPatchReqBody `body:""`
}

type ChatAnnouncementPatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type ChatMembersCreateReqBody struct {
	IdList []string `json:"id_list,omitempty"`
}

type ChatMembersCreateReq struct {
	ChatId       string                    `path:"chat_id"`
	MemberIdType *string                   `query:"member_id_type"`
	Body         *ChatMembersCreateReqBody `body:""`
}

type ChatMembersCreateRespData struct {
	InvalidIdList []string `json:"invalid_id_list,omitempty"`
}

type ChatMembersCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatMembersCreateRespData `json:"data"`
}

type ChatMembersDeleteReqBody struct {
	IdList []string `json:"id_list,omitempty"`
}

type ChatMembersDeleteReq struct {
	ChatId       string                    `path:"chat_id"`
	MemberIdType *string                   `query:"member_id_type"`
	Body         *ChatMembersDeleteReqBody `body:""`
}

type ChatMembersDeleteRespData struct {
	InvalidIdList []string `json:"invalid_id_list,omitempty"`
}

type ChatMembersDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatMembersDeleteRespData `json:"data"`
}

type ChatMembersGetReq struct {
	ChatId       string  `path:"chat_id"`
	MemberIdType *string `query:"member_id_type"`
	PageToken    *string `query:"page_token"`
	PageSize     *int    `query:"page_size"`
}

type ChatMembersGetRespData struct {
	Items       []*ListMember `json:"items,omitempty"`
	PageToken   *string       `json:"page_token,omitempty"`
	HasMore     *bool         `json:"has_more,omitempty"`
	MemberTotal *int          `json:"member_total,omitempty"`
}

type ChatMembersGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatMembersGetRespData `json:"data"`
}

type ChatMembersIsInChatReq struct {
	ChatId string `path:"chat_id"`
}

type ChatMembersIsInChatRespData struct {
	IsInChat *bool `json:"is_in_chat,omitempty"`
}

type ChatMembersIsInChatResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ChatMembersIsInChatRespData `json:"data"`
}

type ChatMembersMeJoinReq struct {
	ChatId string `path:"chat_id"`
}

type ChatMembersMeJoinResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type FileCreateReqBody struct {
	FileType *string   `json:"file_type,omitempty"`
	FileName *string   `json:"file_name,omitempty"`
	Duration *int      `json:"duration,omitempty"`
	File     io.Reader `json:"file,omitempty"`
}

type FileCreateReq struct {
	Body *FileCreateReqBody `body:""`
}

type FileCreateRespData struct {
	FileKey *string `json:"file_key,omitempty"`
}

type FileCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileCreateRespData `json:"data"`
}

type FileGetReq struct {
	FileKey string `path:"file_key"`
}

type FileGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}

type ImageCreateReqBody struct {
	ImageType *string   `json:"image_type,omitempty"`
	Image     io.Reader `json:"image,omitempty"`
}

type ImageCreateReq struct {
	Body *ImageCreateReqBody `body:""`
}

type ImageCreateRespData struct {
	ImageKey *string `json:"image_key,omitempty"`
}

type ImageCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *ImageCreateRespData `json:"data"`
}

type ImageGetReq struct {
	ImageKey string `path:"image_key"`
}

type ImageGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}

type MessageListReq struct {
	ContainerIdType *string `query:"container_id_type"`
	ContainerId     *string `query:"container_id"`
	StartTime       *string `query:"start_time"`
	EndTime         *string `query:"end_time"`
	PageToken       *string `query:"page_token"`
	PageSize        *int    `query:"page_size"`
}

type MessageListRespData struct {
	HasMore   *bool      `json:"has_more,omitempty"`
	PageToken *string    `json:"page_token,omitempty"`
	Items     []*Message `json:"items,omitempty"`
}

type MessageListResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *MessageListRespData `json:"data"`
}

type MessagePatchReqBody struct {
	Content *string `json:"content,omitempty"`
}

type MessagePatchReq struct {
	MessageId string               `path:"message_id"`
	Body      *MessagePatchReqBody `body:""`
}

type MessagePatchResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type MessageReplyReqBody struct {
	Content *string `json:"content,omitempty"`
	MsgType *string `json:"msg_type,omitempty"`
}

type MessageReplyReq struct {
	MessageId string               `path:"message_id"`
	Body      *MessageReplyReqBody `body:""`
}

type MessageReplyResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *Message `json:"data"`
}

type MessageCreateReqBody struct {
	ReceiveId *string `json:"receive_id,omitempty"`
	Content   *string `json:"content,omitempty"`
	MsgType   *string `json:"msg_type,omitempty"`
}

type MessageCreateReq struct {
	ReceiveIdType *string               `query:"receive_id_type"`
	Body          *MessageCreateReqBody `body:""`
}

type MessageCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *Message `json:"data"`
}

type MessageDeleteReq struct {
	MessageId string `path:"message_id"`
}

type MessageDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
}

type MessageReadUsersReq struct {
	MessageId  string  `path:"message_id"`
	UserIdType *string `query:"user_id_type"`
	PageSize   *int    `query:"page_size"`
	PageToken  *string `query:"page_token"`
}

type MessageReadUsersRespData struct {
	Items     []*ReadUser `json:"items,omitempty"`
	HasMore   *bool       `json:"has_more,omitempty"`
	PageToken *string     `json:"page_token,omitempty"`
}

type MessageReadUsersResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *MessageReadUsersRespData `json:"data"`
}

type MessageGetReq struct {
	MessageId string `path:"message_id"`
}

type MessageGetRespData struct {
	Items []*Message `json:"items,omitempty"`
}

type MessageGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *MessageGetRespData `json:"data"`
}

type MessageResourceGetReq struct {
	MessageId string  `path:"message_id"`
	FileKey   string  `path:"file_key"`
	Type      *string `query:"type"`
}

type MessageResourceGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}

type ChatUpdatedEventData struct {
	ChatId            *string        `json:"chat_id,omitempty"`
	OperatorId        *UserId        `json:"operator_id,omitempty"`
	External          *bool          `json:"external,omitempty"`
	OperatorTenantKey *string        `json:"operator_tenant_key,omitempty"`
	AfterChange       *ChatChange    `json:"after_change,omitempty"`
	BeforeChange      *ChatChange    `json:"before_change,omitempty"`
	ModeratorList     *ModeratorList `json:"moderator_list,omitempty"`
}

type ChatUpdatedEvent struct {
	*lark.EventV2Base
	Event *ChatUpdatedEventData `json:"event"`
}

type ChatDisbandedEventData struct {
	ChatId            *string `json:"chat_id,omitempty"`
	OperatorId        *UserId `json:"operator_id,omitempty"`
	External          *bool   `json:"external,omitempty"`
	OperatorTenantKey *string `json:"operator_tenant_key,omitempty"`
}

type ChatDisbandedEvent struct {
	*lark.EventV2Base
	Event *ChatDisbandedEventData `json:"event"`
}

type ChatMemberBotAddedEventData struct {
	ChatId            *string `json:"chat_id,omitempty"`
	OperatorId        *UserId `json:"operator_id,omitempty"`
	External          *bool   `json:"external,omitempty"`
	OperatorTenantKey *string `json:"operator_tenant_key,omitempty"`
}

type ChatMemberBotAddedEvent struct {
	*lark.EventV2Base
	Event *ChatMemberBotAddedEventData `json:"event"`
}

type ChatMemberBotDeletedEventData struct {
	ChatId            *string `json:"chat_id,omitempty"`
	OperatorId        *UserId `json:"operator_id,omitempty"`
	External          *bool   `json:"external,omitempty"`
	OperatorTenantKey *string `json:"operator_tenant_key,omitempty"`
}

type ChatMemberBotDeletedEvent struct {
	*lark.EventV2Base
	Event *ChatMemberBotDeletedEventData `json:"event"`
}

type ChatMemberUserAddedEventData struct {
	ChatId            *string           `json:"chat_id,omitempty"`
	OperatorId        *UserId           `json:"operator_id,omitempty"`
	External          *bool             `json:"external,omitempty"`
	OperatorTenantKey *string           `json:"operator_tenant_key,omitempty"`
	Users             []*ChatMemberUser `json:"users,omitempty"`
}

type ChatMemberUserAddedEvent struct {
	*lark.EventV2Base
	Event *ChatMemberUserAddedEventData `json:"event"`
}

type ChatMemberUserWithdrawnEventData struct {
	ChatId            *string           `json:"chat_id,omitempty"`
	OperatorId        *UserId           `json:"operator_id,omitempty"`
	External          *bool             `json:"external,omitempty"`
	OperatorTenantKey *string           `json:"operator_tenant_key,omitempty"`
	Users             []*ChatMemberUser `json:"users,omitempty"`
}

type ChatMemberUserWithdrawnEvent struct {
	*lark.EventV2Base
	Event *ChatMemberUserWithdrawnEventData `json:"event"`
}

type ChatMemberUserDeletedEventData struct {
	ChatId            *string           `json:"chat_id,omitempty"`
	OperatorId        *UserId           `json:"operator_id,omitempty"`
	External          *bool             `json:"external,omitempty"`
	OperatorTenantKey *string           `json:"operator_tenant_key,omitempty"`
	Users             []*ChatMemberUser `json:"users,omitempty"`
}

type ChatMemberUserDeletedEvent struct {
	*lark.EventV2Base
	Event *ChatMemberUserDeletedEventData `json:"event"`
}

type MessageReceiveEventData struct {
	Sender  *EventSender  `json:"sender,omitempty"`
	Message *EventMessage `json:"message,omitempty"`
}

type MessageReceiveEvent struct {
	*lark.EventV2Base
	Event *MessageReceiveEventData `json:"event"`
}

type MessageMessageReadEventData struct {
	Reader        *EventMessageReader `json:"reader,omitempty"`
	MessageIdList []string            `json:"message_id_list,omitempty"`
}

type MessageMessageReadEvent struct {
	*lark.EventV2Base
	Event *MessageMessageReadEventData `json:"event"`
}
