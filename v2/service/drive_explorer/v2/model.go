// Package drive_explorer code generated by lark suite oapi sdk gen
package drive_explorer

import (
	"github.com/larksuite/oapi-sdk-go/v2"
)

type Child struct {
	Token *string `json:"token,omitempty"`
	Name  *string `json:"name,omitempty"`
	Type  *string `json:"type,omitempty"`
}

type OperatorId struct {
	OpenId  *string `json:"open_id,omitempty"`
	UnionId *string `json:"union_id,omitempty"`
	UserId  *string `json:"user_id,omitempty"`
}

type FileCopyReqBody struct {
	Type           *string `json:"type,omitempty"`
	DstFolderToken *string `json:"dstFolderToken,omitempty"`
	DstName        *string `json:"dstName,omitempty"`
	CommentNeeded  *bool   `json:"commentNeeded,omitempty"`
}

type FileCopyReq struct {
	FileToken string           `path:"fileToken"`
	Body      *FileCopyReqBody `body:""`
}

type FileCopyRespData struct {
	FolderToken *string `json:"folderToken,omitempty"`
	Revision    *int    `json:"revision,omitempty"`
	Token       *string `json:"token,omitempty"`
	Type        *string `json:"type,omitempty"`
	Url         *string `json:"url,omitempty"`
}

type FileCopyResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileCopyRespData `json:"data"`
}

type FileCreateReqBody struct {
	Title *string `json:"title,omitempty"`
	Type  *string `json:"type,omitempty"`
}

type FileCreateReq struct {
	FolderToken string             `path:"folderToken"`
	Body        *FileCreateReqBody `body:""`
}

type FileCreateRespData struct {
	Url      *string `json:"url,omitempty"`
	Revision *int    `json:"revision,omitempty"`
	Token    *string `json:"token,omitempty"`
}

type FileCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileCreateRespData `json:"data"`
}

type FileDocsDeleteReq struct {
	DocToken string `path:"docToken"`
}

type FileDocsDeleteRespData struct {
	Id     *string `json:"id,omitempty"`
	Result *bool   `json:"result,omitempty"`
}

type FileDocsDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileDocsDeleteRespData `json:"data"`
}

type FileSpreadsheetsDeleteReq struct {
	SpreadsheetToken string `path:"spreadsheetToken"`
}

type FileSpreadsheetsDeleteRespData struct {
	Id     *string `json:"id,omitempty"`
	Result *bool   `json:"result,omitempty"`
}

type FileSpreadsheetsDeleteResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileSpreadsheetsDeleteRespData `json:"data"`
}

type FolderChildrenReq struct {
	FolderToken string   `path:"folderToken"`
	Types       []string `query:"types"`
}

type FolderChildrenRespData struct {
	ParentToken *string           `json:"parentToken,omitempty"`
	Children    map[string]*Child `json:"children,omitempty"`
}

type FolderChildrenResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FolderChildrenRespData `json:"data"`
}

type FolderCreateReqBody struct {
	Title *string `json:"title,omitempty"`
}

type FolderCreateReq struct {
	FolderToken string               `path:"folderToken"`
	Body        *FolderCreateReqBody `body:""`
}

type FolderCreateRespData struct {
	Url      *string `json:"url,omitempty"`
	Revision *int    `json:"revision,omitempty"`
	Token    *string `json:"token,omitempty"`
}

type FolderCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FolderCreateRespData `json:"data"`
}

type FolderMetaReq struct {
	FolderToken string `path:"folderToken"`
}

type FolderMetaRespData struct {
	Id        *string `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	Token     *string `json:"token,omitempty"`
	CreateUid *string `json:"createUid,omitempty"`
	EditUid   *string `json:"editUid,omitempty"`
	ParentId  *string `json:"parentId,omitempty"`
	OwnUid    *string `json:"ownUid,omitempty"`
}

type FolderMetaResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FolderMetaRespData `json:"data"`
}

type FolderRootMetaRespData struct {
	Token  *string `json:"token,omitempty"`
	Id     *string `json:"id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

type FolderRootMetaResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FolderRootMetaRespData `json:"data"`
}
